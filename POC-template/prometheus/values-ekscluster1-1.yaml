grafana:
  enabled: true
  deploymentStrategy:
    type: Recreate
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "external"
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
      external-dns.alpha.kubernetes.io/hostname: grafana.${DOMAIN_NAME}
  # persistence config
  # refer grafana values in following helm chart
  # https://github.com/grafana/helm-charts
  persistence: 
    type: pvc
    enabled: true
    storageClassName: gp2
    accessModes:
      - ReadWriteOnce
    size: 20Gi
    # annotations: {}
    finalizers:
      - kubernetes.io/pvc-protection
  # ingress:
  #   enabled: true
  #   annotations:
  #     kubernetes.io/ingress.class: alb
  #     alb.ingress.kubernetes.io/scheme: internet-facing
  #   hosts:
  #     - grafana-poc1120.xxx
prometheus:
  enabled: true
  agentMode: false
  prometheusSpec:
    replicas: 2
    retention: 4h
    retentionSize: "20GB"
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    topologySpreadConstraints: 
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app: prometheus
    # additionalScrapeConfigsSecret: 
    #   enabled: true
    #   name: additional-scrape-configs
    #   key: avalanche-additional.yaml
    storageSpec: 
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
        selector: {}
    externalLabels: 
      cluster: "${CLUSTER_NAME_1}"
      cluster_name: "${CLUSTER_NAME_1}"
      origin_prometheus: "${CLUSTER_NAME_1}"
